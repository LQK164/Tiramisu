---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: neviskeystores.operator.nevis-security.ch
spec:
  group: operator.nevis-security.ch
  names:
    kind: NevisKeyStore
    listKind: NevisKeyStoreList
    plural: neviskeystores
    singular: neviskeystore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The subject common name for the NevisKeyStore
      jsonPath: .spec.cn
      name: CommonName
      type: string
    - description: The secret containing the keys and certificates
      jsonPath: .status.secret.name
      name: Secret
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: NevisKeyStore is the Schema for the neviskeystores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NevisKeyStoreSpec defines the desired state of NevisKeyStore
            properties:
              cn:
                description: CommonName contains the common name of the certificate.
                type: string
              san:
                description: SubjectAlternativeName specifies the values used as subject
                  alternative name.
                properties:
                  dns:
                    description: 'DNS contains the list of the DNS entries used as
                      subject alternative names. It should contain the externally
                      reachable FQDN entries as well the following ones: - ownername.ownernamespace
                      - ownername Those entries are automatically generated for the
                      service of the owner, hence are essential for Kubernetes internal
                      communication.'
                    items:
                      type: string
                    type: array
                  email:
                    description: Email contains the list of the email addresses used
                      for the certificate.
                    items:
                      type: string
                    type: array
                required:
                - dns
                type: object
              usage:
                description: Usage identifies the purposes of the generated certificate.
                type: string
            required:
            - cn
            - san
            type: object
          status:
            description: NevisKeyStoreStatus defines the observed state of NevisKeyStore
            properties:
              conditions:
                description: Conditions contains the current state of the key store.
                items:
                  description: NevisCondition is a condition proper to the status
                    of a Nevis component.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating the reason for
                        the condition to be in this state
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition
                        to be in this state
                      type: string
                    source:
                      description: Source of the condition
                      properties:
                        container:
                          type: string
                        pod:
                          type: string
                      required:
                      - container
                      - pod
                      type: object
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              secret:
                description: Secret containing the keys and certificates.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
